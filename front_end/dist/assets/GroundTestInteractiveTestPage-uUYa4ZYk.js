import{c as e,h as t}from"./utils-CCWp7rz6.js";import{C as s}from"./index-B9YNel-W.js";import{q as r}from"./index-CLjfCghb.js";import{e as n}from"./enums-DTBVM0QW.js";import{n as i}from"./index-BqV8YcGQ.js";var a=function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("div",{directives:[{name:"loading",rawName:"v-loading.fullscreen.lock",value:e.fullscreenLoading,expression:"fullscreenLoading",modifiers:{fullscreen:!0,lock:!0}}],staticStyle:{"background-color":"rgb(45, 45, 45)"}},[s("el-row",{staticStyle:{width:"100%"}},[s("el-col",{attrs:{span:8}},[s("div",{staticClass:"el-header-subcontainer"},[s("span",{staticClass:"el-header-dot"}),e._v(" ATA: "+e._s(e.$store.state.groundTestList.currentGroundTest.ATA)+" ")]),s("div",{staticClass:"el-header-subcontainer"},[s("span",{staticClass:"el-header-dot"}),e._v(" Equipment Name: "+e._s(e.$store.state.groundTestList.currentGroundTest.MemberSystemName)+" ")]),s("div",{staticClass:"el-header-subcontainer"},[s("span",{staticClass:"el-header-dot"}),e._v(" Expected Duration(mins): "+e._s(e.$store.state.groundTestList.currentGroundTest.TestDurationTime)+" ")])]),s("el-col",{attrs:{span:13}},[s("div",{staticClass:"el-header-subcontainer"},[s("span",{staticClass:"el-header-dot"}),e._v(" Test Name: "+e._s(e.$store.state.groundTestList.currentGroundTest.InitiatedTestName)+" ")]),s("div",{staticClass:"el-header-subcontainer"},[s("span",{staticClass:"el-header-dot"}),e._v(" Test Type: "+e._s(e.$store.state.groundTestList.currentGroundTest.TestType)+" ")])]),s("el-col",{attrs:{span:3}},[s("Clock")],1)],1),s("el-main",{staticStyle:{padding:"2vh"}},[s("el-row",{attrs:{gutter:20}},[s("el-col",{attrs:{span:14}},[s("div",[s("div",{staticClass:"custom-card",attrs:{shadow:"hover"}},[s("div",{staticClass:"custom-header"},[e._v("Interactive Test")]),s("div",{staticClass:"custom-content"},[0==e.screenArray.length?s("div",{staticClass:"content-alert"},[e._v(" No Alive Data ")]):"0"==e.$store.state.groundTestList.currentGroundTest.Screen_Trigger_Index?s("div",{staticClass:"content-alert"},[e._v(" No Alive Interactive Test ")]):s("div",{staticClass:"content-item"},[e._v(" "+e._s(e.currentScreem)+" ")])])])])]),s("el-col",{attrs:{span:10}},[s("div",[s("div",{staticClass:"el-main-subtitle",staticStyle:{"margin-top":"4vh"}},[e._v(" Interactive Option ")]),0==e.screenArray.length?s("div",{staticClass:"content-alert"},[e._v(" No Alive Data ")]):"0"==e.$store.state.groundTestList.currentGroundTest.Screen_Trigger_Index?s("div",{staticClass:"content-alert"},[e._v(" No Alive Interactive Test ")]):e._l(e.currentOptions,(function(t){return s("div",{key:t.ResponseId,staticClass:"radio"},[s("div",{staticClass:"radio",staticStyle:{"margin-top":"1vh",padding:"0.5vh"}},[s("input",{directives:[{name:"model",rawName:"v-model",value:e.selectedOption,expression:"selectedOption"}],attrs:{name:"ground-interactive-radio",type:"radio"},domProps:{value:t.ResponseId,checked:e._q(e.selectedOption,t.ResponseId)},on:{change:function(s){e.selectedOption=t.ResponseId}}}),s("label",{staticClass:"form-check-label"},[e._v(e._s(t.ResponseText))])])])}))],2)])],1)],1),s("el-footer",[s("div"),s("div",[s("button",{staticClass:"footer-btn",on:{click:function(t){return e.goTestListPage()}}},[e._v("RETURN")]),s("button",{staticClass:"footer-btn",attrs:{disabled:-1==e.selectedOption},on:{click:function(t){return e.continueTest()}}},[e._v(" CONTINUE ")])])])],1)},o=[];const c={};var d=i({data:()=>({selectedTestId:"",fullscreenLoading:!1,testDict:n,currentStepId:"",currentScreem:"",currentOptions:[],screenArray:[],selectedOption:-1}),components:{Clock:s},methods:{goTestListPage(){clearInterval(this.$store.state.groundTestList.currentGroundTestTimer),this.$router.push({name:"TestList",params:{}})},continueTest(){if(-1!==this.selectedOption){let e=r.stringify({OrderType:"CONTINUE",currentPage:"InteractiveTest",InitiatedTest_Index:[this.$store.state.groundTestList.currentGroundTest.InitiatedTest_Index],MemberSystemID:"",currentScreenId:this.currentStepId,selectedOption:this.selectedOption});this.handleTestOrder(e),this.checkScreenTriggerIndex(0)}else this.$message({message:"No options have been selected yet",type:"warning"})},checkScreenTriggerIndex(e){const t=this.$loading({lock:!0,text:"Waiting for the next screenID...",spinner:"el-icon-loading",background:"rgba(0, 0, 0, 0.8)"});return this.$store.state.groundTestList.currentGroundTest.Screen_Trigger_Index!==this.currentStepId&&"0"!==this.$store.state.groundTestList.currentGroundTest.Screen_Trigger_Index?(t.close(),this.currentStepId=this.$store.state.groundTestList.currentGroundTest.Screen_Trigger_Index,this.selectedOption=-1,this.currentScreem=this.screenArray.find((e=>e.ScreenId===this.currentStepId)).InteractiveScreenText,void(this.currentOptions=this.screenArray.find((e=>e.ScreenId===this.currentStepId)).ResponseMessage.ResponseBlock)):e>=10?(t.close(),this.$message({message:"Exceeded maximum refresh time",type:"warning"}),void this.$router.push({name:"TestList"})):void setTimeout((()=>{this.checkScreenTriggerIndex(e+1)}),1e3)},customSortMethodForProgressColumn:e,handleTestOrder:t},created(){let e,t;e=this.$store.state.groundTestList.currentGroundTest.ScreenId?this.$store.state.groundTestList.currentGroundTest.ScreenId.split(";").filter(Boolean):[],t=""!==this.$store.state.groundTestList.currentGroundTest.InteractiveScreenText?this.$store.state.groundTestList.currentGroundTest.InteractiveScreenText.split(";").filter(Boolean):[];for(let s=0;s<e.length;s++){let r={ScreenId:e[s],ResponseMessage:this.$store.state.groundTestList.currentGroundTest.ResponseMessage[s],InteractiveScreenText:t[s]};this.screenArray.push(r)}0==this.screenArray.length||"0"==this.$store.state.groundTestList.currentGroundTest.Screen_Trigger_Index?(this.$message("No interactive test available for this project"),this.currentStepId=-1):(this.currentStepId=this.$store.state.groundTestList.currentGroundTest.Screen_Trigger_Index,this.currentScreem=this.screenArray.find((e=>e.ScreenId===this.currentStepId)).InteractiveScreenText,this.currentOptions=this.screenArray.find((e=>e.ScreenId===this.currentStepId)).ResponseMessage.ResponseBlock)},mounted(){},beforeDestroy(){clearInterval(this.$store.state.groundTestList.currentGroundTestTimer)}},a,o,!1,l,"95708990");function l(e){for(let t in c)this[t]=c[t]}const u=function(){return d.exports}();export{u as default};
